'use client';
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _extends3 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = require("react");
var _get2 = _interopRequireDefault(require("lodash/get"));
var _set = _interopRequireDefault(require("lodash/set"));
var _utils = require("../utils");
function useField(props) {
  var name = props.name,
    formValue = props.formValue,
    formError = props.formError,
    value = props.value,
    nestedField = props.nestedField,
    errorMessage = props.errorMessage,
    errorFromContext = props.errorFromContext;
  var fieldValue = (0, _react.useMemo)(function () {
    if (typeof value !== 'undefined') {
      return value;
    }
    return nestedField ? (0, _get2.default)(formValue, name) : formValue === null || formValue === void 0 ? void 0 : formValue[name];
  }, [formValue, name, nestedField, value]);
  var fieldError = (0, _react.useMemo)(function () {
    if (typeof errorMessage !== 'undefined' || !errorFromContext) {
      return errorMessage;
    }
    if (nestedField) {
      var _get;
      return (_get = (0, _get2.default)(formError, (0, _utils.nameToPath)(name))) === null || _get === void 0 ? void 0 : _get.errorMessage;
    }
    var fieldError = formError === null || formError === void 0 ? void 0 : formError[name];
    if (typeof fieldError === 'string') {
      return fieldError;
    }
    return fieldError === null || fieldError === void 0 ? void 0 : fieldError.errorMessage;
  }, [errorFromContext, errorMessage, formError, name, nestedField]);
  var setFieldValue = (0, _react.useCallback)(function (fieldName, fieldValue) {
    var _extends2;
    if (nestedField) {
      return (0, _set.default)((0, _extends3.default)({}, formValue), fieldName, fieldValue);
    }
    return (0, _extends3.default)({}, formValue, (_extends2 = {}, _extends2[fieldName] = fieldValue, _extends2));
  }, [formValue, nestedField]);
  return {
    fieldValue: fieldValue,
    fieldError: fieldError,
    setFieldValue: setFieldValue
  };
}
var _default = exports.default = useField;